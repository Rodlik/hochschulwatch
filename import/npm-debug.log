0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', 'tsv', '-g' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ 'tsv', null ]
5 verbose cache add name=undefined spec="tsv" args=["tsv",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'tsv',
6 verbose parsed url   path: 'tsv',
6 verbose parsed url   href: 'tsv' }
7 silly lockFile f589f8f4-tsv tsv
8 verbose lock tsv /home/tomi/.npm/f589f8f4-tsv.lock
9 silly lockFile f589f8f4-tsv tsv
10 silly lockFile f589f8f4-tsv tsv
11 verbose addNamed [ 'tsv', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile ffaea362-tsv tsv@
14 verbose lock tsv@ /home/tomi/.npm/ffaea362-tsv.lock
15 silly addNameRange { name: 'tsv', range: '*', hasData: false }
16 verbose url raw tsv
17 verbose url resolving [ 'https://registry.npmjs.org/', './tsv' ]
18 verbose url resolved https://registry.npmjs.org/tsv
19 info trying registry request attempt 1 at 14:04:07
20 verbose etag "D7ZWTE7RA85RZHDNND92B6XQ1"
21 http GET https://registry.npmjs.org/tsv
22 http 304 https://registry.npmjs.org/tsv
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Sun, 07 Dec 2014 13:04:08 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Sun, 07 Dec 2014 13:04:08 GMT',
23 silly registry.get     'cache-control': 'max-age=60',
23 silly registry.get     etag: '"D7ZWTE7RA85RZHDNND92B6XQ1"',
23 silly registry.get     age: '0',
23 silly registry.get     'x-served-by': 'cache-fra1227-FRA',
23 silly registry.get     'x-cache': 'MISS',
23 silly registry.get     'x-cache-hits': '0',
23 silly registry.get     'x-timer': 'S1417957448.269749,VS0,VE402',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 verbose etag tsv from cache
25 silly addNameRange number 2 { name: 'tsv', range: '*', hasData: true }
26 silly addNameRange versions [ 'tsv', [ '0.1.0', '0.1.1', '0.2.0' ] ]
27 verbose addNamed [ 'tsv', '0.2.0' ]
28 verbose addNamed [ '0.2.0', '0.2.0' ]
29 silly lockFile 9eda3e39-tsv-0-2-0 tsv@0.2.0
30 verbose lock tsv@0.2.0 /home/tomi/.npm/9eda3e39-tsv-0-2-0.lock
31 silly lockFile 9eda3e39-tsv-0-2-0 tsv@0.2.0
32 silly lockFile 9eda3e39-tsv-0-2-0 tsv@0.2.0
33 silly lockFile ffaea362-tsv tsv@
34 silly lockFile ffaea362-tsv tsv@
35 silly resolved [ { name: 'tsv',
35 silly resolved     description: 'Simple dependency-free TSV and CSV converter/parser',
35 silly resolved     version: '0.2.0',
35 silly resolved     main: 'index.js',
35 silly resolved     keywords:
35 silly resolved      [ 'tsv',
35 silly resolved        'csv',
35 silly resolved        'converter',
35 silly resolved        'parser',
35 silly resolved        'json',
35 silly resolved        'separated',
35 silly resolved        'delimited',
35 silly resolved        'd3' ],
35 silly resolved     dependencies: {},
35 silly resolved     devDependencies: { flour: '', mocha: '' },
35 silly resolved     scripts: { test: 'mocha' },
35 silly resolved     repository: { type: 'git', url: 'git://github.com/ricardobeat/TSV.git' },
35 silly resolved     author: { name: 'Ricardo Tomasi' },
35 silly resolved     license: 'MIT (ricardo.mit-license.org)',
35 silly resolved     readme: 'TSV\n===\n\nSimple TSV/CSV converter and parser. Good for serving time-series (or any series) data to use in D3.js or other client-side graph libraries.\n\nProcessing is *synchronous*. **Do not use** for large datasets - use something that supports streams instead, like [node-csv-parser](http://npmjs.org/node-csv-parser).\n\n### Install\n\n    npm install tsv\n\n### Usage\n\n    var csv = require(\'csv\')\n    var tsv = require(\'xsv\').tsv\n    { tsv, csv } = require \'xsv\' // coffeescript\n\nThe `data` argument for stringify must be a flat array of objects. Keys will be derived from the first item.\n\n    TSV.stringify([\n        { id: 1, name: \'xx\' },\n        { id: 2, name: \'yy\' }\n        ...\n    ])\n\nOutputs\n\n    id  name\n    1   xx\n    2   yy\n\n### API\n\n- `TSV.stringify(object)`\n- `TSV.parse(tsv_string)`\n- `CSV.stringify(object)`\n- `CSV.parse(csv_string)`\n\n#### Options and custom separators\n\nNo headers:\n\n    // Creating a new parser\n    var Parser = require(\'tsv\').Parser\n    var CSV = new Parser(",", { header: false })\n\n    // Using the default parser\n    var CSV = require(\'tsv\').CSV\n    CSV.header = false\n\nCustom "pipe-separated values":\n\n    var TSV = require(\'tsv\')\n    PSV = new TSV.Parser("|")\n\n    var res = PSV.parse(...)\n    ',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     bugs: { url: 'https://github.com/ricardobeat/TSV/issues' },
35 silly resolved     _id: 'tsv@0.2.0',
35 silly resolved     _from: 'tsv@' } ]
36 info install tsv@0.2.0 into /usr/local/lib
37 info installOne tsv@0.2.0
38 info /usr/local/lib/node_modules/tsv unbuild
39 verbose tar unpack /home/tomi/.npm/tsv/0.2.0/package.tgz
40 silly lockFile 33a4cbdc-r-usr-local-lib-node-modules-tsv tar:///usr/local/lib/node_modules/tsv
41 verbose lock tar:///usr/local/lib/node_modules/tsv /home/tomi/.npm/33a4cbdc-r-usr-local-lib-node-modules-tsv.lock
42 silly lockFile a4bde80c-e-tomi-npm-tsv-0-2-0-package-tgz tar:///home/tomi/.npm/tsv/0.2.0/package.tgz
43 verbose lock tar:///home/tomi/.npm/tsv/0.2.0/package.tgz /home/tomi/.npm/a4bde80c-e-tomi-npm-tsv-0-2-0-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 error Error: EACCES, mkdir '/usr/local/lib/node_modules'
45 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules']
45 error   errno: 3,
45 error   code: 'EACCES',
45 error   path: '/usr/local/lib/node_modules',
45 error   fstream_type: 'Directory',
45 error   fstream_path: '/usr/local/lib/node_modules/tsv',
45 error   fstream_class: 'DirWriter',
45 error   fstream_stack:
45 error    [ '/usr/lib/nodejs/fstream/lib/writer.js:171:23',
45 error      '/usr/lib/nodejs/mkdirp/index.js:37:53',
45 error      'Object.oncomplete (fs.js:107:15)' ] }
46 error Please try running this command again as root/Administrator.
47 error System Linux 3.13.0-40-generic
48 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "tsv" "-g"
49 error cwd /home/tomi/Sinnwerkstatt/hochschulwatch/import
50 error node -v v0.10.25
51 error npm -v 1.3.10
52 error path /usr/local/lib/node_modules
53 error fstream_path /usr/local/lib/node_modules/tsv
54 error fstream_type Directory
55 error fstream_class DirWriter
56 error code EACCES
57 error errno 3
58 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules'
59 error fstream_stack /usr/lib/nodejs/fstream/lib/writer.js:171:23
59 error fstream_stack /usr/lib/nodejs/mkdirp/index.js:37:53
59 error fstream_stack Object.oncomplete (fs.js:107:15)
60 verbose exit [ 3, true ]
